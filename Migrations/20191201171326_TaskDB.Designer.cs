// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProeyectoSemillero.Models;

namespace ProeyectoSemillero.Migrations
{
    [DbContext(typeof(SemilleroContext))]
    [Migration("20191201171326_TaskDB")]
    partial class TaskDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProeyectoSemillero.Models.ConvocatoriaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estado");

                    b.Property<string>("Fechacierre");

                    b.Property<string>("Fechainicio");

                    b.Property<string>("Nombreconvocatoria");

                    b.HasKey("Id");

                    b.ToTable("Convocatoria");
                });

            modelBuilder.Entity("ProeyectoSemillero.Models.DocenteItem", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Apellido");

                    b.Property<string>("CvLAC");

                    b.Property<string>("Direccion");

                    b.Property<string>("EmailInstitucional");

                    b.Property<string>("EmailPersonal");

                    b.Property<bool>("Estado");

                    b.Property<string>("FechaNacimiento");

                    b.Property<string>("Nombre");

                    b.Property<string>("Programa");

                    b.Property<string>("Segundoapellido");

                    b.Property<string>("Segundonombre");

                    b.Property<string>("Sexo");

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Docente");
                });

            modelBuilder.Entity("ProeyectoSemillero.Models.EstudianteItem", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Apellido");

                    b.Property<string>("CvLAC");

                    b.Property<string>("Direccion");

                    b.Property<bool>("Estado");

                    b.Property<string>("FechaNacimiento");

                    b.Property<string>("Ingreso");

                    b.Property<string>("Nombre");

                    b.Property<string>("Proyecto");

                    b.Property<string>("Segundoapellido");

                    b.Property<string>("Segundonombre");

                    b.Property<string>("Semestre");

                    b.Property<string>("Sexo");

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("ProeyectoSemillero.Models.FacultadItem", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Nombrefacultad");

                    b.HasKey("Id");

                    b.ToTable("Facultad");
                });

            modelBuilder.Entity("ProeyectoSemillero.Models.PlantrabajoItem", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Apellidodocente");

                    b.Property<string>("Nombredocente");

                    b.Property<string>("Nombregruposemillero");

                    b.Property<string>("Nombresemillero");

                    b.Property<int?>("facultad");

                    b.Property<int>("facultadid");

                    b.Property<int?>("programa");

                    b.Property<int>("programaid");

                    b.Property<int?>("semillero");

                    b.Property<int>("semilleroid");

                    b.HasKey("Id");

                    b.HasIndex("facultad");

                    b.HasIndex("programa");

                    b.HasIndex("semillero")
                        .IsUnique()
                        .HasFilter("[semillero] IS NOT NULL");

                    b.ToTable("Trabajo");
                });

            modelBuilder.Entity("ProeyectoSemillero.Models.ProgramaItem", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Nombreprograma");

                    b.Property<int>("facultad_id");

                    b.HasKey("Id");

                    b.HasIndex("facultad_id");

                    b.ToTable("Programa");
                });

            modelBuilder.Entity("ProeyectoSemillero.Models.SemilleroItem", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Apellidodocente");

                    b.Property<string>("Apellidoestudiante");

                    b.Property<string>("CvLAC");

                    b.Property<int?>("EstudiantesId");

                    b.Property<string>("Firmarector");

                    b.Property<string>("Nombredocente");

                    b.Property<string>("Nombreestudiante");

                    b.Property<string>("Nombrefacultad");

                    b.Property<int?>("ProgramaId");

                    b.Property<int>("docente_id");

                    b.HasKey("Id");

                    b.HasIndex("EstudiantesId");

                    b.HasIndex("ProgramaId");

                    b.HasIndex("docente_id");

                    b.ToTable("Semillero");
                });

            modelBuilder.Entity("ProeyectoSemillero.Models.SolicitudAvalItem", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Nombresemillero");

                    b.Property<int>("docente_id");

                    b.HasKey("Id");

                    b.HasIndex("docente_id");

                    b.ToTable("Aval");
                });

            modelBuilder.Entity("ProeyectoSemillero.Models.PlantrabajoItem", b =>
                {
                    b.HasOne("ProeyectoSemillero.Models.FacultadItem", "Facultad")
                        .WithMany()
                        .HasForeignKey("facultad");

                    b.HasOne("ProeyectoSemillero.Models.ProgramaItem", "Programa")
                        .WithMany()
                        .HasForeignKey("programa");

                    b.HasOne("ProeyectoSemillero.Models.SemilleroItem", "Semillero")
                        .WithOne("Trabajo")
                        .HasForeignKey("ProeyectoSemillero.Models.PlantrabajoItem", "semillero");
                });

            modelBuilder.Entity("ProeyectoSemillero.Models.ProgramaItem", b =>
                {
                    b.HasOne("ProeyectoSemillero.Models.FacultadItem", "Facultad")
                        .WithMany()
                        .HasForeignKey("facultad_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProeyectoSemillero.Models.SemilleroItem", b =>
                {
                    b.HasOne("ProeyectoSemillero.Models.EstudianteItem", "Estudiantes")
                        .WithMany()
                        .HasForeignKey("EstudiantesId");

                    b.HasOne("ProeyectoSemillero.Models.ProgramaItem", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId");

                    b.HasOne("ProeyectoSemillero.Models.DocenteItem", "Docente")
                        .WithMany()
                        .HasForeignKey("docente_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProeyectoSemillero.Models.SolicitudAvalItem", b =>
                {
                    b.HasOne("ProeyectoSemillero.Models.DocenteItem", "Docente")
                        .WithMany()
                        .HasForeignKey("docente_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
